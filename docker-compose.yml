services:
  db:
    image: postgres:13
    container_name: oj-project-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: your_db_user
      POSTGRES_PASSWORD: your_db_password
      POSTGRES_DB: your_db_name
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - oj-network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "your_db_user"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
    container_name: oj-project-backend
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - PORT=5000
      - JWT_SECRET=your_jwt_secret_key
      - DB_HOST=db
      - DB_USER=your_db_user
      - DB_PASSWORD=your_db_password
      - DB_NAME=your_db_name
    depends_on:
      db:
        condition: service_healthy
    networks:
      - oj-network

  frontend:
    build:
      context: ./frontend
    container_name: oj-project-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_BASE_URL=http://backend:5000/api
    depends_on:
      - backend
    networks:
      - oj-network

volumes:
  db-data:

networks:
  oj-network:
    driver: bridge
